name: Backend — Build & Push & Deploy

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  packages: read

concurrency:
  group: prod-deploy-backend
  cancel-in-progress: false

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: docker.io/${{ secrets.DOCKERHUB_USER }}/backend-backend
          tags: |
            type=raw,value=latest
            type=sha,format=long

      - name: Build & Push (Backend)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: BackendBiblioMate/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: Deploy backend to VM
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Pull & restart backend with SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host:     ${{ secrets.SSH_HOST }}      # ex: 212.47.230.35
          username: ${{ secrets.SSH_USER }}      # ex: tracy
          key:      ${{ secrets.VPS_SSH_KEY }}   # clé privée OpenSSH (BEGIN/END inclus)
          port:     ${{ secrets.SSH_PORT || '22' }}
          envs:     DOCKERHUB_USER,DOCKERHUB_TOKEN
          script_stop: true
          command_timeout: 10m
          script: |
            set -e
            cd /opt/bibliomate
            docker login -u "$DOCKERHUB_USER" -p "$DOCKERHUB_TOKEN"
            docker compose --env-file .env -f deploy/docker-compose.prod.yml pull backend
            docker compose --env-file .env -f deploy/docker-compose.prod.yml up -d backend
            docker compose -f deploy/docker-compose.prod.yml ps
        env:
          DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
