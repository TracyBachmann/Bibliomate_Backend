services:
  serverSQL:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlservercda
    restart: unless-stopped
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Test1234!
    ports:
      - "1450:1433"
    volumes:
      - sqlDB_data:/var/opt/mssql
    healthcheck:
      test: ["CMD-SHELL", "bash -c 'echo > /dev/tcp/127.0.0.1/1433'"]
      interval: 10s
      timeout: 3s
      retries: 10

  mongo:
    image: mongo:7
    container_name: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  backend:
    build:
      context: ./BackendBiblioMate
      dockerfile: Dockerfile
    container_name: backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5000
      - ConnectionStrings__DefaultConnection=Server=serverSQL,1433;Database=BiblioMateDb;User Id=sa;Password=Test1234!;TrustServerCertificate=True;Encrypt=False;
      - MongoDb__ConnectionString=mongodb://admin:password@mongo:27017/?authSource=admin
      - MongoDb__DatabaseName=BiblioMateLogs
      - SendGrid__ApiKey=${SendGrid__ApiKey}
      - SendGrid__FromEmail=${SendGrid__FromEmail}
      - SendGrid__FromName=${SendGrid__FromName}
      - SendGrid__Sandbox=false
      - Smtp__Host=${Smtp__Host}
      - Smtp__Port=${Smtp__Port}
      - Smtp__Username=${Smtp__Username}
      - Smtp__Password=${Smtp__Password}
      - Smtp__FromEmail=${Smtp__FromEmail}
      - Smtp__FromName=${Smtp__FromName}
    depends_on:
      - serverSQL
      - mongo

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    depends_on:
      - backend

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus

volumes:
  sqlDB_data:
  mongo_data:
